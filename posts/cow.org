#+title: Escaping character with serde deserialization
#+date: <2024-03-17 Sat>
#+filetags: rust cow str bug
#+setupfile: ../org-templates/post.org

Supose you have a struct with the following data model:

#+begin_src rust
  #[derive(Debug, serde::Deserialize)]
  struct Form<'a> {
      password: &'a str,
  }
#+end_src

If you input a value using this model with an escape character this error will happend:

#+begin_src rust
  Err(Error("invalid type: string \"123\\\"456\", expected a borrowed string", line: 1, column: 24))
#+end_src

Why this happend? If we think in the impl we come to the following question: /How is serde supposed to do zero-copy deserialization. which is implied by =&str=, with an escape character?/ 

You can change this reference to =Cow=[fn:cow] wich means =clone-on-write= who can enclose and provide immutable access to borrowed data. 

#+begin_src rust
  #[derive(Debug, serde::Deserialize)]
  struct Form<'a> {
      password: std::borrow::Cow<'a, str>,
  }
#+end_src

[[https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&code=use+serde%3A%3ADeserialize%3B%0Ause+std%3A%3Aborrow%3A%3ACow%3B%0A%0A%23%5Bderive%28Debug%2C+Deserialize%29%5D%0A%23%5Ballow%28dead_code%29%5D%0Astruct+Form%3C%27a%3E+%7B%0A++++password%3A+%26%27a+str%2C%0A%7D%0A%0A%23%5Bderive%28Debug%2C+Deserialize%29%5D%0A%23%5Ballow%28dead_code%29%5D%0Astruct+CowForm%3C%27a%3E+%7B%0A++++password%3A+Cow%3C%27a%2C+str%3E%2C%0A%7D%0A%0Afn+main%28%29+-%3E+anyhow%3A%3AResult%3C%28%29%3E+%7B%0A++++let+json+%3D+r%23%22%7B+%22password%22%3A+%22123%5C%22456%22+%7D%22%23%3B%0A++++let+result%3A+Result%3CCowForm%2C+_%3E+%3D+serde_json%3A%3Afrom_str%28json%29%3B%0A++++println%21%28%22%7B%3A%3F%7D%22%2C+result%29%3B%0A++++%0A++++let+json+%3D+r%23%22%7B+%22password%22%3A+%22123%5C%22456%22+%7D%22%23%3B%0A++++let+result%3A+Result%3CForm%2C+_%3E+%3D+serde_json%3A%3Afrom_str%28json%29%3B%0A++++println%21%28%22%7B%3A%3F%7D%22%2C+result%29%3B%0A++++%0A++++Ok%28%28%29%29%0A%7D][Here]]is a playground that demonstrate the issue.

[fn:cow] [[https://doc.rust-lang.org/std/borrow/enum.Cow.html][Cow]] documentation.
